build obj/third_party/libvpx/simple_decoder.actions_depends.stamp: stamp $
    libvpx.a $
    obj/third_party/libvpx/gen_asm_offsets_vp8.actions_rules_copies.stamp $
    libvpx_asm_offsets_vp8.a libvpx_intrinsics_mmx.a $
    libvpx_intrinsics_sse2.a libvpx_intrinsics_ssse3.a

build obj/third_party/libvpx/simple_decoder.compile_depends.stamp: stamp $
    obj/third_party/libvpx/libvpx.actions_rules_copies.stamp $
    obj/third_party/libvpx/gen_asm_offsets_vp8.actions_rules_copies.stamp

rule simple_decoder_target_generate_example_6b745d13b3683e72c84470c1d96ca791
  command = cd ../../third_party/libvpx; export $
      BUILT_PRODUCTS_DIR=/Users/perch/WebRTC/trunk/out_sim/Release; export $
      CONFIGURATION=Release; export EXECUTABLE_NAME=simple_decoder; export $
      EXECUTABLE_PATH=simple_decoder; export $
      FULL_PRODUCT_NAME=simple_decoder; export PRODUCT_NAME=simple_decoder; $
      export PRODUCT_TYPE=com.apple.product-type.tool; export $
      SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.1.sdk; $
      export $
      SRCROOT=/Users/perch/WebRTC/trunk/out_sim/Release/../../third_party/libvpx; $
      export SOURCE_ROOT="$${SRCROOT}"; export $
      TARGET_BUILD_DIR=/Users/perch/WebRTC/trunk/out_sim/Release; export $
      TEMP_DIR="$${TMPDIR}";bash -c $
      "../../out_sim/Release/gen/third_party/libvpx/simple_decoder/gen_example_code.sh $
      ${source} > ../../out_sim/Release/gen/third_party/libvpx/${root}.c"
  description = RULE Generate libvpx example code ${source}.
  restat = 1

build gen/third_party/libvpx/simple_decoder.c: $
    simple_decoder_target_generate_example_6b745d13b3683e72c84470c1d96ca791 $
    ../../third_party/libvpx/source/libvpx/examples/simple_decoder.txt | $
    gen/third_party/libvpx/simple_decoder/gen_example_code.sh || $
    obj/third_party/libvpx/simple_decoder.actions_depends.stamp
  source = source/libvpx/examples/simple_decoder.txt
  root = simple_decoder
  unique_name = 78eb44ca016907cabb072e1b0a6556cf
build gen/third_party/libvpx/simple_decoder/gen_example_code.sh: copy $
    ../../third_party/libvpx/source/libvpx/examples/gen_example_code.sh || $
    obj/third_party/libvpx/simple_decoder.actions_depends.stamp
build obj/third_party/libvpx/simple_decoder.actions_rules_copies.stamp: $
    stamp gen/third_party/libvpx/simple_decoder.c $
    gen/third_party/libvpx/simple_decoder/gen_example_code.sh

defines = -DANGLE_DX11 -DDISABLE_NACL -DCHROMIUM_BUILD $
    -DUSE_LIBJPEG_TURBO=1 -DENABLE_INPUT_SPEECH -DENABLE_EGLIMAGE=1 $
    -DENABLE_SPELLCHECK=1 -DDISABLE_FTP_SUPPORT=1 -DNDEBUG -DNVALGRIND $
    -DDYNAMIC_ANNOTATIONS_ENABLED=0 -DNS_BLOCK_ASSERTIONS=1
includes = -I../../third_party/libvpx/source/libvpx
cflags = -isysroot $
    /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.1.sdk $
    -Os -gdwarf-2 -fvisibility=hidden -Wnewline-eof $
    -mios-simulator-version-min=6.0 -arch i386 -Wendif-labels $
    -Wno-unused-parameter -Wno-missing-field-initializers -Wheader-hygiene $
    -Wno-c++11-narrowing -Wno-char-subscripts -Wno-unused-function $
    -Wno-covered-switch-default -Wstring-conversion $
    -Wno-deprecated-register -Wheader-hygiene -Wno-char-subscripts $
    -Wno-unused-function -Wno-unnamed-type-template-args -Wno-c++11-narrowing
cflags_c = -std=c99 -Xclang -load -Xclang $
    /Users/perch/WebRTC/trunk/tools/clang/scripts/../../../third_party/llvm-build/Release+Asserts/lib/libFindBadConstructs.dylib $
    -Xclang -add-plugin -Xclang find-bad-constructs -fcolor-diagnostics
cflags_cc = -std=gnu++0x -fno-rtti -fno-exceptions $
    -fvisibility-inlines-hidden -fno-threadsafe-statics -Xclang -load $
    -Xclang $
    /Users/perch/WebRTC/trunk/tools/clang/scripts/../../../third_party/llvm-build/Release+Asserts/lib/libFindBadConstructs.dylib $
    -Xclang -add-plugin -Xclang find-bad-constructs -fcolor-diagnostics $
    -std=gnu++11
cflags_objc = $cflags_c
cflags_objcc = $cflags_cc -fobjc-call-cxx-cdtors

build $
    obj/third_party/libvpx/gen/third_party/libvpx/simple_decoder.simple_decoder.o: $
    cc gen/third_party/libvpx/simple_decoder.c || $
    obj/third_party/libvpx/simple_decoder.actions_rules_copies.stamp

ldflags = -Wl,-search_paths_first -force_load $
    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/arc/libarclite_iphonesimulator.a $
    -Wl,-dead_strip -mios-simulator-version-min=6.0 -isysroot $
    /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.1.sdk $
    -arch i386 -L.
libs = 
build simple_decoder: link $
    obj/third_party/libvpx/gen/third_party/libvpx/simple_decoder.simple_decoder.o $
    libvpx_asm_offsets_vp8.a libvpx_intrinsics_sse2.a $
    libvpx_intrinsics_ssse3.a libvpx.a libvpx_intrinsics_mmx.a | $
    obj/third_party/libvpx/gen_asm_offsets_vp8.actions_rules_copies.stamp
  postbuilds = $ && (export $
      BUILT_PRODUCTS_DIR=/Users/perch/WebRTC/trunk/out_sim/Release; export $
      CONFIGURATION=Release; export EXECUTABLE_NAME=simple_decoder; export $
      EXECUTABLE_PATH=simple_decoder; export $
      FULL_PRODUCT_NAME=simple_decoder; export PRODUCT_NAME=simple_decoder; $
      export PRODUCT_TYPE=com.apple.product-type.tool; export $
      SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator6.1.sdk; $
      export $
      SRCROOT=/Users/perch/WebRTC/trunk/out_sim/Release/../../third_party/libvpx; $
      export SOURCE_ROOT="$${SRCROOT}"; export $
      TARGET_BUILD_DIR=/Users/perch/WebRTC/trunk/out_sim/Release; export $
      TEMP_DIR="$${TMPDIR}"; (cd ../../third_party/libvpx && strip  $
      ../../out_sim/Release/simple_decoder); G=$$?; ((exit $$G) || rm -rf $
      simple_decoder) && exit $$G)
